events {}

http {
    include /etc/nginx/mime.types;
    server_tokens off;
    charset utf-8;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # Directivas de tamaño de búfer para prevenir ataques DoS
    client_body_buffer_size 1k;
    client_header_buffer_size 3k;
    client_max_body_size 1M; # Ajusta este valor según tus necesidades
    large_client_header_buffers 2 1k;

    # Configuración de limitación de solicitudes para prevenir ataques DoS
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;

    # Definir upstreams para los backends
    upstream ns-front {
        server ns-front:5000;
    }

    upstream ns-admin {
        server ns-admin:5001;
    }
 

    # Servidor para redirigir todo el tráfico HTTP a HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name srv498956.hstgr.cloud;

        location /.well-known/acme-challenge/ {
            rewrite ^/\.well-known/acme-challenge(.*) $1 break;
            alias /home/fcvg-certbot/www/certbot/.well-known/acme-challenge/;
        }

        # Bloquear solicitudes peligrosas
        if ($request_uri ~* "\.(php|sh)") {
            return 403;
        }

        # Bloquea solicitudes que intentan acceder a scripts CGI
        location ~* /(\.|/)\.(cgi|sh|pl|py|php|asp|jsp|exe|bat|bin|dll) {
            return 403;
        }

        # Redirigir todo el tráfico HTTP a HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
        
        limit_req zone=req_limit_per_ip burst=25 nodelay;
    }

    # Servidor principal que maneja el tráfico HTTPS
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name srv498956.hstgr.cloud;

        ssl_certificate /etc/letsencrypt/live/srv498956.hstgr.cloud/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/srv498956.hstgr.cloud/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        # Configuración para la ruta principal
        location ^~ / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $host;
            
            proxy_read_timeout 10s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;

            proxy_pass http://ns-front; # Usar upstream definido
            proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 = @ns-front_fallback;

            # Bloquear solicitudes peligrosas
            if ($request_uri ~* "\.(php|sh)") {
                return 403;
            }
            
            # Bloquea solicitudes que intentan acceder a scripts CGI
            location ~* /(\.|/)\.(cgi|sh|pl|py|php|asp|jsp|exe|bat|bin|dll) {
                return 403;
            }

            limit_req zone=req_limit_per_ip burst=20 nodelay;
        }


        location ^~ /admin/ {
            rewrite ^/admin(/.*)$ $1 break;
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $host;

            proxy_read_timeout 10s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;

            proxy_pass http://ns-admin;
            proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
            proxy_intercept_errors on;
            error_page 502 = @ns-admin_fallback;
        }

    
        # Página de fallback para softvalue-public-next
        location @ns-front_fallback {
            return 503;
        }

        location @ns-admin_fallback {
            return 503;
        }

        # Página de error personalizada
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Servidor predeterminado para manejar solicitudes no coincidentes
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name srv498956.hstgr.cloud;

        ssl_certificate /etc/letsencrypt/live/srv498956.hstgr.cloud/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/srv498956.hstgr.cloud/privkey.pem;

        location / {
            return 503;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
